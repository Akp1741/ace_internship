1.Timer that shows countdown

import React, { useState, useEffect } from 'react';
const Timer: React.FC = () => {
  const [totalSeconds, setTotalSeconds] = useState<number>(0);
  const [inputTime, setInputTime] = useState<string>('');

  useEffect(() => {
    if (inputTime === '') return;
const [hrs = 0, mins = 0, secs = 0] = inputTime.split(':').map(Number);
    const newTotalSeconds = hrs * 3600 + mins * 60 + secs;
    setTotalSeconds(newTotalSeconds);

    const timer = setInterval(() => {
      setTotalSeconds(prevSeconds => prevSeconds > 0 ? prevSeconds - 1 : 0);
    }, 1000);

    return () => clearInterval(timer);
  }, [inputTime]);

  const formatTime = (): string => {
    const hrs = Math.floor(totalSeconds / 3600);
    const mins = Math.floor((totalSeconds % 3600) / 60);
    const secs = totalSeconds % 60;

    return `${formatNumber(hrs)}:${formatNumber(mins)}:${formatNumber(secs)}`;};
  const formatNumber = (num: number): string => {
    return num < 10 ? `0${num}` : num.toString();
  };

  return (
    <div>
      <input type="text" value={inputTime} onChange={(e) => setInputTime(e.target.value)} placeholder="HH:MM:SS" />
      <p>Time remaining: {formatTime()}</p>
    </div>
  );
};
export default Timer;

2.togle Switch to implement state change when clicked

import React, { useState } from 'react';

export default function StatefulButton() {
  const [clicked, setClicked] = useState<boolean>(false);

  return (
    <>Click on Button for toggle Event
    <button onClick={() => setClicked(true)}>
      {clicked ? 'Clicked!' : 'Click me'}
    </button>
  );
}

3. Search Filter
import React, { useState } from 'react';

const App: React.FC = () => {
  const [searchVal, setSearchVal] = useState<string>("");

  const technologyList: string[] = [
    "React", "Angular", "Vue", "Node.js",
    "Express", "Django", "Spring Boot", "Flutter",
    "Swift", "Java", "Python", "JavaScript",
    "HTML", "CSS", "MongoDB"
  ];

  const filteredTechnologies = technologyList.filter(item =>
    item.toLowerCase().includes(searchVal.toLowerCase())
  );

  return (
    <div className="search-container">
      Enter Technologie Name:
      <input
        type="text"onChange={(e) => setSearchVal(e.target.value)}  value={searchVal}  placeholder="Search technologies..."
      />
      <div>
        {filteredTechnologies.map((technology, index) => (
          <div key={index}>{technology}</div>
        ))}
      </div>
    </div>
  );
};
export default App;

4.to do list add and delete feature.

import React, { useState } from 'react';
interface Item {
  id: number;
  name: string;
}

let nextId = 0;

export default function List(): JSX.Element {
  const [name, setName] = useState<string>('')
  const [items, setItems] = useState<Item[]>([]);

  const addItem = (): void => {
    setItems((currentItems: Item[]) => [...currentItems, { id: nextId++, name }]);
    setName('');
  };

  const deleteItem = (id: number): void => {
    setItems((currentItems: Item[]) => currentItems.filter((item: Item) => item.id !== id));
  };

  return (
    <>
      <h1>Items:</h1>
      <input value={name} onChange={(e: React.ChangeEvent<HTMLInputElement>) => setName(e.target.value)} />
      <button onClick={addItem}>Insert</button>
      <ul>
        {items.map((item: Item) => (
          <li key={item.id}>
            {item.name} <button onClick={() => deleteItem(item.id)}>Delete</button>
          </li>
        ))}
      </ul>
    </>
  );
}
